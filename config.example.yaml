app:
  env: "dev"
  project: "example-project"
  timezone: "Asia/Jakarta"
otel:
  tracer: false
  metric: false
  logs: false
  server:
    grpc.host: "localhost"
    grpc.port: 4317
  options:
    logs:
      ignore.attr.keys:
        incoming.log: ["req_user_agent", "req_header", "req_body_raw", "req_body_parsed", "res_header", "res_body", "panic_recover_err", "panic_stack"]
server:
  asynq:
    name: "asynq-svc"
    host: "0.0.0.0"
    port: 8081
    address: "0.0.0.0:8081"
    domain: "http://localhost"
    additional:
      asynq.route.monitoring: /asynqmon
      asynq.log.level: '2' # Debug: 1 | Info: 2 | Warn: 3 | Error: 4 | Fatal: 5 , Note: the format using string not numeric 
  http:
    name: "core-svc"
    host: "0.0.0.0"
    port: 8080
    address: "0.0.0.0:8080"
    domain: "http://localhost"
    oapi:
      title: "My Core API"
      version: "1.0.0"
      servers:
        - url: "http://localhost:8080"
          description: "Local Server"
  example:
    name: "example-core-svc"
    host: "0.0.0.0"
    port: 8888
    address: "0.0.0.0:8888"
    domain: "http://localhost"
    oapi:
      title: "My Core Example API"
      version: "1.0.0"
      servers:
        - url: "http://localhost:8888"
          description: "Example Local Server"
smtp:
  gmail:
    host: localhost
    port: 587
    credential:
      name: "Admin Example"
      email: admin.example.local
      username: "example"
      password: "example"
template:
  example.email.template: "./storage/template/my_template.tpl" 
log:
  # Where you need store to store log and what a log name
  base.path: "./storage/logs/{server.name}/{log.type}"
  trx.client:
    # The sparator ':' mean 'merchant/x' it will be directory. I suggest you to use easy and exact naming with no-space for removing complexity.
    - "merchant:x"
    - "merchant:y"
    - "merchant:z"
  log.type:
    debug: # For logging debug app, for feed `:log.type`
      disabled: false
      otel:
        disabled: false
        level: 0 # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
      console:
        disabled: false
        level: -1 # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
      file:
        disabled: false
        level: 1 # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
        rotation:
          filename: "app_debug_process.log" # what a log name
          max.backup: 10 # how much backup files
          max.size: 100 # how much maximum megabytes
          max.age: 0 # how much maximum days, default is 0 that means not deleted old logs
          local.time: false # default UTC | false
          compress: false # default false
    io: # For logging api input-output / IO proccess, for feed `:log.type`
      disabled: false
      notify:
        enabled: false # Notify State for Send Notify
        debug: true # Notify Status Success / Error into Log Debug
        retention: 7200 # format number is seconds, this for asynq worker retention log will be disappear
      otel:
        disabled: false
        level: 0 # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
      console:
        disabled: false
        level: 0 # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
      file:
        disabled: false
        level: 1 # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
        rotation:
          filename: "app_io_process.log" #  what a log name
          max.backup: 10 # how much backup files
          max.size: 100 # how much maximum megabytes
          max.age: 0 # how much maximum days, default is 0 that means not deleted old logs
          local.time: false # default UTC | false
          compress: false # default false
    trx: # For logging Transaction process your client, for feed `:log.type`
      disabled: false
      otel:
        disabled: false
        level: 0 # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
      console:
        disabled: false
        level: 0 # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
      file:
        disabled: false
        level: 1 # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
        rotation:
          filename: "app_trx_process.log" # what a log name and {CLIENT} will be replaced by client key
          max.backup: 10 # how much backup files
          max.size: 100 # how much maximum megabytes
          max.age: 0 # how much maximum days, default is 0 that means not deleted old logs
          local.time: false # default UTC | false
          compress: false # default false
cache:
  redis:
    disabled: false
    dbname: "0"
    port: 6379
    address: "localhost"
    credential:
      enabled: true
      username: "default"
      password: ""
    options:
      dial.timeout: 30 # format number is seconds | default is 5 seconds
      read.timeout: 30 # format number is seconds | default is 3 seconds | -1 = no timeout | `-2` - disables SetReadDeadline calls completely.
      write.timeout: 30 # format number is seconds | default is 3 seconds | -1 = no timeout | `-2` - disables SetWriteDeadline calls completely.
db:
  postgres:
    disabled: false
    driver: "postgres"
    dbname: "example-db"
    port: 5432
    address: "localhost"
    credential:
      enabled: true
      username: "postgres"
      password: "secret"
    options:
      timezone: "Asia/Jakarta"
      sslmode: "disable"
      connection.timeout: 30
      max.connection.lifetime: 180
      max.open.connection: 20
      max.idle.connection: 10
security:
  aes.key: # Generate Key Using: openssl rand -base64 32
    default: "vWEMYULu9XLhyGpGOrvhZ6cyi6FxYaczpGAZGQLwOZE="
provider:
  example.one:
    base.url: "https://api.example.com/api/v1"
    options:
      client.id: "example.one.id"
      client.secret: "example.one.secret"