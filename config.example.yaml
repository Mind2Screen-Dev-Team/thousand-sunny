app:
  env: "dev"
  project: "example-project"
  timezone: "Asia/Jakarta"
otel:
  tracer: false
  metric: false
  logs: false
  server:
    grpc.host: "localhost"
    grpc.port: 4317
  options:
    ignore.log.keys:
      - "req_user_agent"
      - "req_header"
      - "req_body_raw"
      - "req_body_parsed"
      - "res_header"
      - "res_body"
      - "panic_recover_err"
      - "panic_stack"
server:
  http:
    name: "core-svc"
    host: "0.0.0.0"
    port: 8080
    address: "0.0.0.0:8080"
    domain: "http://localhost"
    additional:
      prefork: "false" # fiber prefork option
    oapi:
      info:
        title: "My Core API"
        version: "1.0.0"
        description: | 
          Lorem Ipsum is simply dummy text of the printing and typesetting industry. 
          Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. 
          It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. 
          It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and 
          more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
        termsOfService: https://www.example.com/tos
        contact:
          name: API Support
          url: https://www.example.com/support
          email: support@example.com
        license:
          name: MIT
          url: https://mit-license.org
      servers:
        - url: "http://localhost:8080"
          description: "Local Server"
smtp:
  gmail:
    host: localhost
    port: 587
    credential:
      name: "Admin Example"
      email: admin.example.local
      username: "example"
      password: "example"
template:
  example.email.template: "./storage/template/my_template.tpl" 
log:
  base.path: "./storage/logs" # where you need store to store log
  console.format: "console"   # available values: console and json
  level: -1                   # Trace: -1 | Debug: 0 | Info: 1 | Warn: 2 | Error: 3 | Fatal: 4 | Panic: 5
  file:                   # file log options
    disabled: false       # disable file logging -> default is console logging
    name: "app.log"       # what a log name
    rotation:             # rotation options
      max.backup: 10      # how much backup files
      max.size: 100       # how much maximum megabytes
      max.age: 0          # how much maximum days, default is 0 that means not deleted old logs
      local.time: false   # default UTC | false
      compress: false     # default false
cache:
  redis:
    disabled: false
    dbname: "0"
    port: 6379
    address: "localhost"
    credential:
      enabled: true
      username: "default"
      password: ""
    options:
      dial.timeout: 30  # format number is seconds | default is 5 seconds
      read.timeout: 30  # format number is seconds | default is 3 seconds | -1 = no timeout | `-2` - disables SetReadDeadline calls completely.
      write.timeout: 30 # format number is seconds | default is 3 seconds | -1 = no timeout | `-2` - disables SetWriteDeadline calls completely.
db:
  postgres:
    disabled: false
    driver: "postgres"
    dbname: "example-db"
    port: 5432
    address: "localhost"
    credential:
      enabled: true
      username: "postgres"
      password: "secret"
    options:
      timezone: "Asia/Jakarta"
      sslmode: "disable"
      connection.timeout: 30
      max.connection.lifetime: 180
      max.open.connection: 20
      max.idle.connection: 10
security:
  aes.key: # Generate Key Using: openssl rand -base64 32
    default: "vWEMYULu9XLhyGpGOrvhZ6cyi6FxYaczpGAZGQLwOZE="
provider:
  example.one:
    base.url: "https://api.example.com/api/v1"
    options:
      client.id: "example.one.id"
      client.secret: "example.one.secret"